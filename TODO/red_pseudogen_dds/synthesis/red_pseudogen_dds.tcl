# TCL script automaticaly generated by POD
cd ../objs
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "../objs/"

# Create project
create_project -part xc7z010clg400-1 red_pseudogen_dds

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [get_projects red_pseudogen_dds]
set_property "default_lib" "xil_defaultlib" $obj
set_property "simulator_language" "Mixed" $obj
set_property "target_language" "VHDL" $obj

# configure platform params
# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "../synthesis/top_red_pseudogen_dds.vhd"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property "top" "top_red_pseudogen_dds" $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

## add components sources file
# add top level sources file
set obj [get_filesets sources_1]
set file "[file normalize "../synthesis/top_red_pseudogen_dds.vhd"]"
set file_added [add_files -norecurse -fileset $obj $file]
set obj [get_filesets sources_1]
set file "[file normalize "../synthesis/redpitaya_axi_wrapper00_axim/redpitaya_axi_wrapper00_axim_intercon.vhd"]"
set file_added [add_files -norecurse -fileset $obj $file]
set obj [get_filesets sources_1]
set file "[file normalize "../synthesis/pseudo_generateur_real/pseudo_generateur_real_logic.vhd"]"
set file_added [add_files -norecurse -fileset $obj $file]
set obj [get_filesets sources_1]
set file "[file normalize "../synthesis/pseudo_generateur_real/pseudo_generateur_real.vhd"]"
set file_added [add_files -norecurse -fileset $obj $file]
set obj [get_filesets sources_1]
set file "[file normalize "../synthesis/pseudo_generateur_real/wb_pseudoGenReal.vhd"]"
set file_added [add_files -norecurse -fileset $obj $file]
set obj [get_filesets sources_1]
set file "[file normalize "../synthesis/pseudo_generateur_real/pseudoGenReal_handComm.vhd"]"
set file_added [add_files -norecurse -fileset $obj $file]
set obj [get_filesets sources_1]
set file "[file normalize "../synthesis/redpitaya_axi_wrapper/redpitaya_axi_wrapper.vhd"]"
set file_added [add_files -norecurse -fileset $obj $file]
set obj [get_filesets sources_1]
set file "[file normalize "../synthesis/convertComplexToReal/convertComplexToReal.vhd"]"
set file_added [add_files -norecurse -fileset $obj $file]
set obj [get_filesets sources_1]
set file "[file normalize "../synthesis/redpitaya_axi_wrapper00_candroutput/redpitaya_axi_wrapper00_candroutput_intercon.vhd"]"
set file_added [add_files -norecurse -fileset $obj $file]
set obj [get_filesets sources_1]
set file "[file normalize "../synthesis/redpitaya_adc_dac/redpitaya_adc_dac_clk.v"]"
set file_added [add_files -norecurse -fileset $obj $file]
set obj [get_filesets sources_1]
set file "[file normalize "../synthesis/redpitaya_adc_dac/redpitaya_adc_dac.v"]"
set file_added [add_files -norecurse -fileset $obj $file]
set obj [get_filesets sources_1]
set file "[file normalize "../synthesis/redpitaya_adc_dac/ltc2145.v"]"
set file_added [add_files -norecurse -fileset $obj $file]
set obj [get_filesets sources_1]
set file "[file normalize "../synthesis/redpitaya_adc_dac/ad9767.v"]"
set file_added [add_files -norecurse -fileset $obj $file]
set obj [get_filesets sources_1]
set file "[file normalize "../synthesis/nco_counter/nco_counter_handcomm.vhd"]"
set file_added [add_files -norecurse -fileset $obj $file]
set obj [get_filesets sources_1]
set file "[file normalize "../synthesis/nco_counter/wb_nco_counter.vhd"]"
set file_added [add_files -norecurse -fileset $obj $file]
set obj [get_filesets sources_1]
set file "[file normalize "../synthesis/nco_counter/nco_counter.vhd"]"
set file_added [add_files -norecurse -fileset $obj $file]
set obj [get_filesets sources_1]
set file "[file normalize "../synthesis/nco_counter/nco_counter_logic.vhd"]"
set file_added [add_files -norecurse -fileset $obj $file]
set obj [get_filesets sources_1]
set file "[file normalize "../synthesis/nco_counter/nco_counter_cos_rom.vhd"]"
set file_added [add_files -norecurse -fileset $obj $file]
# add constraint file
# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "../synthesis/red_pseudogen_dds.xdc"]"
set file_added [add_files -norecurse -fileset $obj $file]
set file "../synthesis/red_pseudogen_dds.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property "file_type" "XDC" $file_obj


# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property "top" "top_red_pseudogen_dds" $obj

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
  create_run -name synth_1 -part xc7z010clg400-1 -flow {Vivado Synthesis 2016} -strategy "Vivado Synthesis Defaults" -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2016" [get_runs synth_1]
}
set obj [get_runs synth_1]

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
  create_run -name impl_1 -part xc7z010clg400-1 -flow {Vivado Implementation 2016} -strategy "Vivado Implementation Defaults" -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2016" [get_runs impl_1]
}
set obj [get_runs impl_1]

set_property "needs_refresh" "1" $obj
set_property "steps.write_bitstream.args.bin_file" "1" $obj
load_features ipintegrator
source ../synthesis/redpitaya_axi_wrapper_bd.tcl


# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created: red_pseudogen_dds"
# set the current impl run
current_run -implementation [get_runs impl_1]
generate_target all [get_files ./red_pseudogen_dds.srcs/sources_1/bd/redpitaya_axi_wrapper_bd/redpitaya_axi_wrapper_bd.bd]
launch_runs synth_1
wait_on_run synth_1
## do implementation
launch_runs impl_1
wait_on_run impl_1
## make bit file
launch_runs impl_1 -to_step write_bitstream
wait_on_run impl_1
exit
