Copyright 1986-2016 Xilinx, Inc. All Rights Reserved.
-------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2016.2 (lin64) Build 1577090 Thu Jun  2 16:32:35 MDT 2016
| Date         : Fri Dec  2 16:58:06 2016
| Host         : TF-PYB12 running 64-bit Debian GNU/Linux 8.0 (jessie)
| Command      : report_drc -file test_pound_fironly_v1_wrapper_drc_routed.rpt -pb test_pound_fironly_v1_wrapper_drc_routed.pb
| Design       : test_pound_fironly_v1_wrapper
| Device       : xc7z010clg400-1
| Speed File   : -1
-------------------------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 16

2. REPORT DETAILS
-----------------
DPOP-2#1 Warning
MREG Output pipelining  
DSP test_pound_fironly_v1_i/fir16RealbitsOneInTwoMult_v1_0_0/U0/fir_top_inst/generate_fir[0].fir_glob_inst/fir_proc_inst/multiplier_i/DSP48E1_inst multiplier stage test_pound_fironly_v1_i/fir16RealbitsOneInTwoMult_v1_0_0/U0/fir_top_inst/generate_fir[0].fir_glob_inst/fir_proc_inst/multiplier_i/DSP48E1_inst/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#2 Warning
MREG Output pipelining  
DSP test_pound_fironly_v1_i/fir16RealbitsOneInTwoMult_v1_0_0/U0/fir_top_inst/generate_fir[10].fir_glob_inst/fir_proc_inst/multiplier_i/DSP48E1_inst multiplier stage test_pound_fironly_v1_i/fir16RealbitsOneInTwoMult_v1_0_0/U0/fir_top_inst/generate_fir[10].fir_glob_inst/fir_proc_inst/multiplier_i/DSP48E1_inst/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#3 Warning
MREG Output pipelining  
DSP test_pound_fironly_v1_i/fir16RealbitsOneInTwoMult_v1_0_0/U0/fir_top_inst/generate_fir[11].fir_glob_inst/fir_proc_inst/multiplier_i/DSP48E1_inst multiplier stage test_pound_fironly_v1_i/fir16RealbitsOneInTwoMult_v1_0_0/U0/fir_top_inst/generate_fir[11].fir_glob_inst/fir_proc_inst/multiplier_i/DSP48E1_inst/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#4 Warning
MREG Output pipelining  
DSP test_pound_fironly_v1_i/fir16RealbitsOneInTwoMult_v1_0_0/U0/fir_top_inst/generate_fir[12].fir_glob_inst/fir_proc_inst/multiplier_i/DSP48E1_inst multiplier stage test_pound_fironly_v1_i/fir16RealbitsOneInTwoMult_v1_0_0/U0/fir_top_inst/generate_fir[12].fir_glob_inst/fir_proc_inst/multiplier_i/DSP48E1_inst/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#5 Warning
MREG Output pipelining  
DSP test_pound_fironly_v1_i/fir16RealbitsOneInTwoMult_v1_0_0/U0/fir_top_inst/generate_fir[1].fir_glob_inst/fir_proc_inst/multiplier_i/DSP48E1_inst multiplier stage test_pound_fironly_v1_i/fir16RealbitsOneInTwoMult_v1_0_0/U0/fir_top_inst/generate_fir[1].fir_glob_inst/fir_proc_inst/multiplier_i/DSP48E1_inst/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#6 Warning
MREG Output pipelining  
DSP test_pound_fironly_v1_i/fir16RealbitsOneInTwoMult_v1_0_0/U0/fir_top_inst/generate_fir[2].fir_glob_inst/fir_proc_inst/multiplier_i/DSP48E1_inst multiplier stage test_pound_fironly_v1_i/fir16RealbitsOneInTwoMult_v1_0_0/U0/fir_top_inst/generate_fir[2].fir_glob_inst/fir_proc_inst/multiplier_i/DSP48E1_inst/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#7 Warning
MREG Output pipelining  
DSP test_pound_fironly_v1_i/fir16RealbitsOneInTwoMult_v1_0_0/U0/fir_top_inst/generate_fir[3].fir_glob_inst/fir_proc_inst/multiplier_i/DSP48E1_inst multiplier stage test_pound_fironly_v1_i/fir16RealbitsOneInTwoMult_v1_0_0/U0/fir_top_inst/generate_fir[3].fir_glob_inst/fir_proc_inst/multiplier_i/DSP48E1_inst/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#8 Warning
MREG Output pipelining  
DSP test_pound_fironly_v1_i/fir16RealbitsOneInTwoMult_v1_0_0/U0/fir_top_inst/generate_fir[4].fir_glob_inst/fir_proc_inst/multiplier_i/DSP48E1_inst multiplier stage test_pound_fironly_v1_i/fir16RealbitsOneInTwoMult_v1_0_0/U0/fir_top_inst/generate_fir[4].fir_glob_inst/fir_proc_inst/multiplier_i/DSP48E1_inst/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#9 Warning
MREG Output pipelining  
DSP test_pound_fironly_v1_i/fir16RealbitsOneInTwoMult_v1_0_0/U0/fir_top_inst/generate_fir[5].fir_glob_inst/fir_proc_inst/multiplier_i/DSP48E1_inst multiplier stage test_pound_fironly_v1_i/fir16RealbitsOneInTwoMult_v1_0_0/U0/fir_top_inst/generate_fir[5].fir_glob_inst/fir_proc_inst/multiplier_i/DSP48E1_inst/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#10 Warning
MREG Output pipelining  
DSP test_pound_fironly_v1_i/fir16RealbitsOneInTwoMult_v1_0_0/U0/fir_top_inst/generate_fir[6].fir_glob_inst/fir_proc_inst/multiplier_i/DSP48E1_inst multiplier stage test_pound_fironly_v1_i/fir16RealbitsOneInTwoMult_v1_0_0/U0/fir_top_inst/generate_fir[6].fir_glob_inst/fir_proc_inst/multiplier_i/DSP48E1_inst/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#11 Warning
MREG Output pipelining  
DSP test_pound_fironly_v1_i/fir16RealbitsOneInTwoMult_v1_0_0/U0/fir_top_inst/generate_fir[7].fir_glob_inst/fir_proc_inst/multiplier_i/DSP48E1_inst multiplier stage test_pound_fironly_v1_i/fir16RealbitsOneInTwoMult_v1_0_0/U0/fir_top_inst/generate_fir[7].fir_glob_inst/fir_proc_inst/multiplier_i/DSP48E1_inst/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#12 Warning
MREG Output pipelining  
DSP test_pound_fironly_v1_i/fir16RealbitsOneInTwoMult_v1_0_0/U0/fir_top_inst/generate_fir[8].fir_glob_inst/fir_proc_inst/multiplier_i/DSP48E1_inst multiplier stage test_pound_fironly_v1_i/fir16RealbitsOneInTwoMult_v1_0_0/U0/fir_top_inst/generate_fir[8].fir_glob_inst/fir_proc_inst/multiplier_i/DSP48E1_inst/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#13 Warning
MREG Output pipelining  
DSP test_pound_fironly_v1_i/fir16RealbitsOneInTwoMult_v1_0_0/U0/fir_top_inst/generate_fir[9].fir_glob_inst/fir_proc_inst/multiplier_i/DSP48E1_inst multiplier stage test_pound_fironly_v1_i/fir16RealbitsOneInTwoMult_v1_0_0/U0/fir_top_inst/generate_fir[9].fir_glob_inst/fir_proc_inst/multiplier_i/DSP48E1_inst/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

PLIO-7#1 Warning
Placement Constraints Check for IO constraints  
An IO Bus FIXED_IO_mio[53:0] with more than one IO standard is found. Components associated with this bus are: LVCMOS33 (FIXED_IO_mio[15], FIXED_IO_mio[14], FIXED_IO_mio[13], FIXED_IO_mio[12], FIXED_IO_mio[11], FIXED_IO_mio[10]); LVCMOS18 (FIXED_IO_mio[53], FIXED_IO_mio[52], FIXED_IO_mio[51], FIXED_IO_mio[50], FIXED_IO_mio[49], FIXED_IO_mio[48], FIXED_IO_mio[47], FIXED_IO_mio[46], FIXED_IO_mio[45], FIXED_IO_mio[44], FIXED_IO_mio[43], FIXED_IO_mio[42], FIXED_IO_mio[41], FIXED_IO_mio[40], FIXED_IO_mio[39] (the first 15 of 48 listed)); 
Related violations: <none>

REQP-1615#1 Warning
use_IOB_register  
The FDCE cell test_pound_fironly_v1_i/ltc2145_0/U0/ltc2145_capture_inst/data_a_s_reg[13] has IOB set to TRUE, but does not connect directly to an IO cell. Remove the constraint or ensure the FDCE is property connected to an IO.
Related violations: <none>

REQP-1615#2 Warning
use_IOB_register  
The FDCE cell test_pound_fironly_v1_i/ltc2145_0/U0/ltc2145_capture_inst/data_b_s_reg[13] has IOB set to TRUE, but does not connect directly to an IO cell. Remove the constraint or ensure the FDCE is property connected to an IO.
Related violations: <none>


